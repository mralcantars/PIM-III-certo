from usuarios.notificacoes import adicionar_notificacao

def mostrar_documentos(usuario):
    """
    Mostra os exames/documentos do paciente com status e permite
    simular a√ß√µes: baixar PDF ou visualizar.
    """

    # Filtra apenas os exames da agenda
    documentos = []
    for c in usuario.get("agenda", []):
        if c["tipo_compromisso"].lower() == "exame":
            status = c.get("status", "Pendente libera√ß√£o")
            documentos.append({
                "nome": c.get("exame", "Exame gen√©rico"),
                "status": status
            })

    if not documentos:
        print("\nüìÇ Nenhum documento dispon√≠vel.")
        return

    while True:
        print("\nüìÇ Meus documentos")
        for idx, doc in enumerate(documentos, 1):
            if doc["status"].lower() == "dispon√≠vel":
                print(f"{idx} - {doc['nome']} ‚Äì Dispon√≠vel ‚Äì [‚¨áÔ∏è Baixar PDF] / [üëÅÔ∏è Visualizar]")
            else:
                print(f"{idx} - {doc['nome']} ‚Äì Pendente libera√ß√£o")

        print("0 - Voltar ao menu")
        escolha = input("Escolha um documento para a√ß√£o ou 0 para voltar: ").strip()

        if escolha == "0":
            break

        if not escolha.isdigit() or int(escolha) < 1 or int(escolha) > len(documentos):
            print("‚ùå Op√ß√£o inv√°lida.")
            continue

        doc_escolhido = documentos[int(escolha)-1]

        if doc_escolhido["status"].lower() != "dispon√≠vel":
            print(f"‚ö†Ô∏è       O exame '{doc_escolhido['nome']}' ainda n√£o est√° dispon√≠vel para download ou visualiza√ß√£o.")
            continue

        print(f"\nVoc√™ escolheu: {doc_escolhido['nome']}")
        print("1 - ‚¨áÔ∏è Baixar PDF")
        print("2 - üëÅÔ∏è Visualizar")
        acao = input("Escolha uma a√ß√£o: ").strip()

        if acao == "1":
            # Simula√ß√£o de download
            print(f"‚úÖ PDF de '{doc_escolhido['nome']}' baixado com sucesso!")
        elif acao == "2":
            # Simula√ß√£o de visualiza√ß√£o
            print(f"üëÅÔ∏è Exibindo '{doc_escolhido['nome']}' no visualizador...")
        else:
            print("‚ùå A√ß√£o inv√°lida.")

def liberar_exame(usuario, exame):
    # l√≥gica para liberar exame
    adicionar_notificacao(
        "Novo documento dispon√≠vel",
        f"O resultado do exame '{exame['nome']}' j√° est√° dispon√≠vel para visualiza√ß√£o.",
        "novos_documentos"
    )